
AI ამოცანების გადაჭრისას (ზოგადად საძიებო ალგორითმებში), კლასის (class) ობიექტები გამოიყენება
პრობლემის მდგომარეობათა სივრცის კოდში წარმოსადგენად და სამართავად. კლასები ქმნიან 
სტრუქტურას მდგომარეობებისა და საძიებო პროცესის სამართავად AI პრობლემების გადაჭრისას,
ასე კლასებად წარმოდგენილ მონაცემთა სტრუქტურებს AI ალგორითმები სისტემატურად იკვლევენ
მდგომარეობათა სივრცეს მოცემული პრობლემის გადაჭრისთვის.

ამის გათვალისწინებით, შექმენით შემდეგი კლასები: Node, StackSpace, QueueSpace, PriorityQueueSpace.

*Node უნდა შეიცავდეს მდგომარეობას (state), მოქმედებას (action), მშობელს (parent) და 
 გენეოლოგიურ ხეს (family_tree).
*StackSpace უნდა იცოდეს ფრონტი სივრცის შესახებ(frontier) და ჰქონდეს შემდეგი მეთოდები:
  add, remove, რომლებიც მიჰყვებიან stack-ის პრინციპს; ასევე is_empty და contains_state.
*QueueSpace უნდა იცოდეს ფრონტი სივრცის შესახებ(frontier) და ჰქონდეს შემდეგი მეთოდები:
  add, remove, რომლებიც მიჰყვებიან queue-ის პრინციპს; ასევე is_empty და contains_state.
*PriorityQueueSpace უნდა იცოდეს ფრონტი სივრცის შესახებ(frontier) და ჰქონდეს შემდეგი მეთოდები:
 add, remove, რომლებიც მიჰყვებიან პრიორიტეტული რიგის პრინციპს; ასევე is_empty და contains_state.
 (აქ ნიმუშად შეგიძლიათ გამოიყენოთ  uniform_cost_search.py კოდში დაწერილი PriorityQueue კლასი)

ასევე თქვენი სიტყვებით აღწერეთ, თუ როგორ შეიძლება ასეთი სტრუქტურები სასარგებლო იყოს მდგომარეობათა
სივრცის გამოკვლევისთვის როგორც პრაქტიკული თვალსაზრისით, ასევე ამოცანების ალგორითმულად გადაჭრისას.

გაგზავნეთ თქვენი კოდი და აღწერილობის ფაილი იმეილზე igugunashvili@cu.edu.ge 
subject მიუთითეთ AI&ML_task1
დავალებისთვის არ გაქვთ რამე მკაცრად განსაზღვრული დედლაინი კურსის განმავლობაში ნებისმიერ დროს შეგიძლიათ
გამომიგზავნოთ, ეს დავალება უფრო იმისთვისაა რომ დამოუკიდებლად კოდის წერაში წაივარჯიშოთ.

თუ რამე კითხვები გექნებათ ნებისმიერ დროს შეგიძლიათ მომწეროთ რა პლატფორმაზეც გირჩევნიათ(fb/skype/mail)
